# automatically generated by the FlatBuffers compiler, do not modify

# namespace: results

import flatbuffers

# /// Stores a double mean and standard deviation.
class meanStddev(object):
    __slots__ = ['_tab']

    # meanStddev
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # meanStddev
    def Mean(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # meanStddev
    def Stddev(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))

def CreatemeanStddev(builder, mean, stddev):
    builder.Prep(8, 16)
    builder.PrependFloat64(stddev)
    builder.PrependFloat64(mean)
    return builder.Offset()
